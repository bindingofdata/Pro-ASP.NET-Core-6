@page "/pages/form/{id:long?}"
@model FormHandlerModel
@using Microsoft.AspNetCore.Mvc.ModelBinding
@using Microsoft.AspNetCore.Mvc.RazorPages
@using Microsoft.EntityFrameworkCore
@using System.Text.Json
@using WebApp.Validation

<partial name="_Validation"/>

<div class="m-2">
    <h5 class="bg-primary text-white text-center m-2">HTML Form</h5>
    <form asp-page="FormHandler" method="post" id="htmlform">
        <div class="form-group">
            <label>Name</label>
            <div>
                <span asp-validation-for="Product.Name" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="Product.Name"/>
        </div>
        <div class="form-group">
            <label>Price</label>
            <div>
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="Product.Price"/>
        </div>
        <div class="form-group">
            <label>CategoryId</label>
            <div>
                <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="Product.CategoryId"/>
        </div>
        <div class="form-group">
            <label>SupplierId</label>
            <div>
                <span asp-validation-for="Product.SupplierId" class="text-danger"></span>
            </div>
            <input class="form-control" asp-for="Product.SupplierId" />
        </div>
        <button class="btn btn-primary m-2" type="submit">Submit</button>
    </form>
</div>

@functions {
    public sealed class FormHandlerModel : PageModel
    {
        private readonly DataContext _context;

        [BindProperty]
        public Product? Product { get; set; }

        // [BindProperty(Name = "Product.Category")]
        // public Category Category { get; set; } = new();

        public FormHandlerModel(DataContext dataContext)
        {
            _context = dataContext;
        }

        public async Task OnGetAsync(long id = 1)
        {
            Product = await _context.Products.FirstAsync(product => product.ProductId == id);
        }

        public IActionResult OnPost()
        {
            if (ModelState.IsValid)
            {
                TempData["name"] = Product?.Name;
                TempData["price"] = Product?.Price.ToString();
                TempData["categoryId"] = Product?.CategoryId.ToString();
                TempData["supplierId"] = Product?.SupplierId.ToString();
                return RedirectToPage("FormResults");
            }
            else
            {
                ModelState.PromotePropertyErrors(nameof(Product));
                return Page();
            }
        }
    }
}